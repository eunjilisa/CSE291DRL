{
  "artifacts": [],
  "command": "score_agent",
  "experiment": {
    "base_dir": "/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/src/aprl",
    "dependencies": [
      "numpy==1.21.3",
      "sacred==0.8.2"
    ],
    "mainfile": "score_agent.py",
    "name": "score",
    "repositories": [
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      }
    ],
    "sources": [
      [
        "__init__.py",
        "_sources/__init___d41d8cd98f00b204e9800998ecf8427e.py"
      ],
      [
        "common/__init__.py",
        "_sources/__init___d41d8cd98f00b204e9800998ecf8427e.py"
      ],
      [
        "common/utils.py",
        "_sources/utils_8e9ad5be6982810a8ed89e3e2b99e765.py"
      ],
      [
        "envs/__init__.py",
        "_sources/__init___d82c10de489e949b6fd9a615c47bb1b3.py"
      ],
      [
        "envs/gym_compete.py",
        "_sources/gym_compete_390b609bccd23afcff3e0120981d0aeb.py"
      ],
      [
        "envs/multi_agent.py",
        "_sources/multi_agent_a2e147bf1358443fffc7dce90202b5cc.py"
      ],
      [
        "envs/observation_masking.py",
        "_sources/observation_masking_174b80ba4e5d8bb2179276e9b71977ab.py"
      ],
      [
        "envs/wrappers.py",
        "_sources/wrappers_19734e516b103883f78988345c379c2f.py"
      ],
      [
        "policies/__init__.py",
        "_sources/__init___64192e690b0475cf5d922d621eb17a03.py"
      ],
      [
        "policies/loader.py",
        "_sources/loader_6e9f37bf89471db8820240e12fde88aa.py"
      ],
      [
        "policies/wrappers.py",
        "_sources/wrappers_f74362c9d3d8d633aedd86c70295225a.py"
      ],
      [
        "score_agent.py",
        "_sources/score_agent_ac675bf60b760fac59d0ddadd310339a.py"
      ],
      [
        "visualize/__init__.py",
        "_sources/__init___d41d8cd98f00b204e9800998ecf8427e.py"
      ],
      [
        "visualize/annotated_gym_compete.py",
        "_sources/annotated_gym_compete_bf0b20c76351b69abf2863ba91d4cb26.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/venv/lib/python3.7/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/src/aprl/score_agent.py\", line 280, in score_agent\n    score = get_empirical_score(venv, agents)\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/venv/lib/python3.7/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/src/aprl/score_agent.py\", line 64, in get_empirical_score\n    for _, _, dones, infos in sim_stream:\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/src/aprl/envs/wrappers.py\", line 250, in simulate\n    venv.render()\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/venv/lib/python3.7/site-packages/stable_baselines/common/vec_env/base_vec_env.py\", line 247, in render\n    return self.venv.render(mode=mode)\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/venv/lib/python3.7/site-packages/stable_baselines/common/vec_env/dummy_vec_env.py\", line 85, in render\n    return self.envs[0].render(mode=mode)\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/venv/lib/python3.7/site-packages/gym_compete/new_envs/multi_agent_env.py\", line 180, in render\n    return self.env_scene.render(mode, close)\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/venv/lib/python3.7/site-packages/gym_compete/new_envs/mujoco_env.py\", line 121, in render\n    self._get_viewer().loop_once()\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/venv/lib/python3.7/site-packages/gym_compete/new_envs/mujoco_env.py\", line 126, in _get_viewer\n    self.viewer.start()\n",
    "  File \"/mnt/c/Users/songe/Documents/GitHub/CSE291-5/adversarial-policies/venv/lib/python3.7/site-packages/mujoco_py_131/mjviewer.py\", line 168, in start\n    raise Exception('glfw failed to initialize')\n",
    "Exception: glfw failed to initialize\n"
  ],
  "heartbeat": "2021-11-12T10:10:20.933193",
  "host": {
    "ENV": {},
    "cpu": "11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz",
    "hostname": "LAPTOP-NRTIETLL",
    "os": [
      "Linux",
      "Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-Ubuntu-20.04-focal"
    ],
    "python_version": "3.7.12"
  },
  "meta": {
    "command": "score_agent",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": {
    "ties": 0,
    "win0": 0,
    "win1": 0
  },
  "start_time": "2021-11-12T10:10:19.502035",
  "status": "FAILED",
  "stop_time": "2021-11-12T10:10:20.947966"
}