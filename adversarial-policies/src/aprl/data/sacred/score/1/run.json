{
  "artifacts": [],
  "command": "score_agent",
  "experiment": {
    "base_dir": "/home/charleslu/adversarial-policies/src/aprl",
    "dependencies": [
      "numpy==1.21.3",
      "sacred==0.8.2"
    ],
    "mainfile": "score_agent.py",
    "name": "score",
    "repositories": [
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      },
      {
        "commit": "bba910b89149f1274bb9652a6f378b22c3c9b6c5",
        "dirty": true,
        "url": "https://github.com/HumanCompatibleAI/adversarial-policies.git"
      }
    ],
    "sources": [
      [
        "__init__.py",
        "_sources/__init___d41d8cd98f00b204e9800998ecf8427e.py"
      ],
      [
        "common/__init__.py",
        "_sources/__init___d41d8cd98f00b204e9800998ecf8427e.py"
      ],
      [
        "common/utils.py",
        "_sources/utils_f89dc4432b750b0e33f0765ad76a128b.py"
      ],
      [
        "envs/__init__.py",
        "_sources/__init___16cbb2d6c07d5873ccc7b9395c972cce.py"
      ],
      [
        "envs/gym_compete.py",
        "_sources/gym_compete_bc3afffb47e66e66b48474617ea54482.py"
      ],
      [
        "envs/multi_agent.py",
        "_sources/multi_agent_2ec3395fb4d3287899d4a751820a49cc.py"
      ],
      [
        "envs/observation_masking.py",
        "_sources/observation_masking_e8a3081e806023847e55f498248fc601.py"
      ],
      [
        "envs/wrappers.py",
        "_sources/wrappers_260ebb344a08d9657ce44e9d1a0c1f31.py"
      ],
      [
        "policies/__init__.py",
        "_sources/__init___5a17d97d523e24cfbdb9a2ce9b0ad4ec.py"
      ],
      [
        "policies/loader.py",
        "_sources/loader_d89a151e79c650b5595c054fd8fa91dd.py"
      ],
      [
        "policies/wrappers.py",
        "_sources/wrappers_4b681ab1adc5627710e8e442ee0b5df1.py"
      ],
      [
        "score_agent.py",
        "_sources/score_agent_378fac7b9c01864fd0d1631d2a679386.py"
      ],
      [
        "visualize/__init__.py",
        "_sources/__init___d41d8cd98f00b204e9800998ecf8427e.py"
      ],
      [
        "visualize/annotated_gym_compete.py",
        "_sources/annotated_gym_compete_075da8c30b3e2cbc860b59e99b61b079.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/home/charleslu/adversarial-policies/venv/lib/python3.7/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/home/charleslu/adversarial-policies/src/aprl/score_agent.py\", line 259, in score_agent\n    venv = make_dummy_vec_multi_env(env_fns)\n",
    "  File \"/home/charleslu/adversarial-policies/src/aprl/envs/multi_agent.py\", line 274, in f\n    venv = cls(*args, **kwargs)\n",
    "  File \"/home/charleslu/adversarial-policies/src/aprl/envs/multi_agent.py\", line 286, in __init__\n    DummyVecEnv.__init__(self, env_fns)\n",
    "  File \"/home/charleslu/adversarial-policies/venv/lib/python3.7/site-packages/stable_baselines/common/vec_env/dummy_vec_env.py\", line 23, in __init__\n    self.envs = [fn() for fn in env_fns]\n",
    "  File \"/home/charleslu/adversarial-policies/venv/lib/python3.7/site-packages/stable_baselines/common/vec_env/dummy_vec_env.py\", line 23, in <listcomp>\n    self.envs = [fn() for fn in env_fns]\n",
    "  File \"/home/charleslu/adversarial-policies/src/aprl/score_agent.py\", line 247, in env_fn\n    **video_params[\"annotation_params\"],\n",
    "  File \"/home/charleslu/adversarial-policies/src/aprl/visualize/annotated_gym_compete.py\", line 167, in __init__\n    self.font = ImageFont.truetype(f\"{font}.ttf\", font_size)\n",
    "  File \"/home/charleslu/adversarial-policies/venv/lib/python3.7/site-packages/PIL/ImageFont.py\", line 855, in truetype\n    return freetype(font)\n",
    "  File \"/home/charleslu/adversarial-policies/venv/lib/python3.7/site-packages/PIL/ImageFont.py\", line 852, in freetype\n    return FreeTypeFont(font, size, index, encoding, layout_engine)\n",
    "  File \"/home/charleslu/adversarial-policies/venv/lib/python3.7/site-packages/PIL/ImageFont.py\", line 212, in __init__\n    font, size, index, encoding, layout_engine=layout_engine\n",
    "OSError: cannot open resource\n"
  ],
  "heartbeat": "2021-11-14T03:14:25.091813",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-10875H CPU @ 2.30GHz",
    "gpus": {
      "driver_version": "471.35",
      "gpus": [
        {
          "model": "NVIDIA GeForce RTX 2060 with Max-Q Design",
          "persistence_mode": false,
          "total_memory": 6144
        }
      ]
    },
    "hostname": "DESKTOP-D60JE0C",
    "os": [
      "Linux",
      "Linux-5.10.60.1-microsoft-standard-WSL2-x86_64-with-Ubuntu-20.04-focal"
    ],
    "python_version": "3.7.12"
  },
  "meta": {
    "command": "score_agent",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_name=multicomp/SumoHumans-v0",
        "render=False",
        "videos=True"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2021-11-14T03:14:25.062694",
  "status": "FAILED",
  "stop_time": "2021-11-14T03:14:25.093026"
}